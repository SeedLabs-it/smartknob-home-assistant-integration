import{resolve as E}from"path";import{createFilter as v}from"@rollup/pluginutils";var d="vite-plugin-eslint";import{existsSync as x}from"fs";function g(r){return r.split("?",2)[0]}function h(r){return!x(r)}function y(r){let{eslintPath:n,lintOnStart:f,include:o,exclude:t,formatter:p,emitWarning:a,emitError:l,failOnWarning:u,failOnError:s,...i}=r;return i}async function c(r){return r.then(n=>[null,n]).catch(n=>[n,void 0])}async function m(r,n,f,o,t,p){let[a,l]=await c(n.lintFiles(f));if(a)return Promise.reject(a);let u=l.some(e=>e.warningCount>0),s=l.some(e=>e.errorCount>0),i=t(l);if(o.fix&&l){let[e]=await c(p(l));if(e)return Promise.reject(e)}if(u&&o.emitWarning){let e=typeof i=="string"?i:await i;o.failOnWarning?r.error(e):r.warn(e)}if(s&&o.emitError){let e=typeof i=="string"?i:await i;o.failOnError?r.error(e):console.log(e)}return Promise.resolve()}function S(r={}){let n,f,o,t,p,a=new Set;return{name:d,async configResolved(l){t=Object.assign({lintOnStart:!1,include:["**/*.js","**/*.jsx","**/*.ts","**/*.tsx","**/*.vue","**/*.svelte"],exclude:["**/node_modules/**"],cacheLocation:E(l.cacheDir,".eslintcache"),formatter:"stylish",emitWarning:!0,emitError:!0,failOnWarning:!1,failOnError:!0,errorOnUnmatchedPattern:!1},r)},async buildStart(){let[l,u]=await c(import(t.eslintPath??"eslint"));if(l)this.error("Failed to import ESLint, do you install or configure eslintPath?");else{let s=y(t);switch(n=new u.ESLint(s),p=u.ESLint.outputFixes,f=v(t.include,t.exclude),typeof t.formatter){case"string":o=(await n.loadFormatter(t.formatter)).format;break;case"function":o=t.formatter;default:break}if(t.lintOnStart&&t.include){this.warn("LintOnStart is turned on, and it will check for all matching files.");let[i]=await c(m(this,n,t.include,t,o,p));i&&this.error(i.message)}}},async transform(l,u){let s=g(u),i=h(s);if(i&&a.has(s)&&a.delete(s),!f(s)||await n.isPathIgnored(s)||i)return null;t.cache&&a.add(s);let[e]=await c(m(this,n,t.cache?Array.from(a):s,t,o,p));return e&&this.error(e.message),null}}}export{S as default};
